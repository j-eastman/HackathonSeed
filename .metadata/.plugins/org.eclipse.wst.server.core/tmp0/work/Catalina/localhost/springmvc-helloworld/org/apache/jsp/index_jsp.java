/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.13
 * Generated at: 2017-04-08 00:29:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular.min.js\"></script>\n");
      out.write("   \t\t <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n");
      out.write("   \t\t <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("    \t <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-route.js\"></script>\n");
      out.write("\n");
      out.write(" \t    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("\t    \n");
      out.write("\t    <script type=\"text/javascript\" src=\"sample.js\"></script>\n");
      out.write("\t    \n");
      out.write("    \t<script src=\"bower_components/webcomponentsjs/webcomponents-lite.min.js\"></script>\n");
      out.write("    \t\n");
      out.write("\t    <!--Iron-->\n");
      out.write("\t    <link rel=\"import\" href=\"bower_components/iron-ajax/iron-ajax.html\">\n");
      out.write("\t</head>\n");
      out.write("\n");
      out.write("  <title>GEHC Hackathon #1</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<nav class=\"navbar navbar-default\">\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("        <!-- Brand and toggle get grouped for better mobile display -->\n");
      out.write("        <div class=\"navbar-header\">\n");
      out.write("            <a class=\"navbar-brand\" href=\"#/\">GEHC Hackathon - Java</a>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Collect the nav links, forms, and other content for toggling -->\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("            <ul class=\"nav navbar-nav\">\n");
      out.write("                <li><a href=\"#/\">Home</a></li>\n");
      out.write("                <li><a href=\"#/one\">One</a></li>\n");
      out.write("                <li><a href=\"#/two\">Two</a></li>\n");
      out.write("                <li><a href=\"#/three\">Three</a></li>\n");
      out.write("            </ul>\n");
      out.write("            <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("                <li><a href=\"#/learn\">Learn More</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </div><!-- /.navbar-collapse -->\n");
      out.write("    </div><!-- /.container-fluid -->\n");
      out.write("</nav>\n");
      out.write("\n");
      out.write("<body ng-app=\"predixModule\" ng-controller=\"mainController\">\n");
      out.write("\n");
      out.write("\t<div id=\"container\">\n");
      out.write("\n");
      out.write("<button ng-click=\"aggregateData()\"></button>\n");
      out.write("\n");
      out.write("<iron-ajax\n");
      out.write("    auto\n");
      out.write("    url=\"https://time-series-store-predix.run.aws-usw02-pr.ice.predix.io/v1/datapoints\"\n");
      out.write("    headers=\"Authorization: Bearer {{token}}\n");
      out.write("   \t\tPredix-Zone-Id: e3fba85e-d334-409e-87ce-3a17e71b4946\n");
      out.write("   \t\tOrigin: http://<origin-hostname>/\"\n");
      out.write("   \tbody={\n");
      out.write("\t  \"tags\": [\n");
      out.write("\t    {\n");
      out.write("\t      \"name\": \"Engine Battery Voltage\",\n");
      out.write("\t      \"order\": \"desc\",\n");
      out.write("\t      \"aggregations\": [\n");
      out.write("\t        {\n");
      out.write("\t          \"type\": \"avg\",\n");
      out.write("\t          \"sampling\": {\n");
      out.write("\t            \"unit\": \"s\",\n");
      out.write("\t            \"value\": \"30\"\n");
      out.write("\t          }\n");
      out.write("\t        }\n");
      out.write("\t      ]\n");
      out.write("\t    }\n");
      out.write("\t  ],\n");
      out.write("\t  \"start\": 1491523200000,\n");
      out.write("\t  \"end\": 1491591600000\n");
      out.write("\t}\n");
      out.write("    handle-as=\"json\"\n");
      out.write("    last-response=\"{{response}}\"\n");
      out.write("    debounce-duration=\"300\"></iron-ajax>\n");
      out.write("    \n");
      out.write("    <h1>{{response}}</h1>\n");
      out.write("\t    <div ng-view></div>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
